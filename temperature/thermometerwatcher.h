/*
 * This file was generated by qdbusxml2cpp version 0.7
 * Command line was: qdbusxml2cpp -a thermometerwatcher.h:thermometerwatcher.cpp -i types.h xml/thermometerwatcher.xml
 *
 * qdbusxml2cpp is Copyright (C) 2010 Nokia Corporation and/or its subsidiary(-ies).
 *
 * This is an auto-generated file.
 * This file may have been hand-edited. Look for HAND-EDIT comments
 * before re-generating it.
 */

#ifndef THERMOMETERWATCHER_H_1322748837
#define THERMOMETERWATCHER_H_1322748837

#include <QtCore/QObject>
#include <QtDBus/QtDBus>
#include "types.h"
class QByteArray;
template<class T> class QList;
template<class Key, class Value> class QMap;
class QString;
class QStringList;
class QVariant;

/*
 * Adaptor class for interface org.bluez.ThermometerWatcher
 */
class ThermometerWatcherAdaptor: public QDBusAbstractAdaptor
{
    Q_OBJECT
    Q_CLASSINFO("D-Bus Interface", "org.bluez.ThermometerWatcher")
    Q_CLASSINFO("D-Bus Introspection", ""
"  <interface name=\"org.bluez.ThermometerWatcher\">\n"
"    <method name=\"MeasurementReceived\">\n"
"      <arg direction=\"in\" type=\"a{sv}\" name=\"measure\"/>\n"
"      <annotation value=\"QVariantMap\" name=\"com.trolltech.QtDBus.QtTypeName.In0\"/>\n"
"    </method>\n"
"  </interface>\n"
        "")
public:
    ThermometerWatcherAdaptor(QObject *parent);
    virtual ~ThermometerWatcherAdaptor();

public: // PROPERTIES
public Q_SLOTS: // METHODS
    void MeasurementReceived(const QVariantMap &measure);
Q_SIGNALS: // SIGNALS
};

#endif
